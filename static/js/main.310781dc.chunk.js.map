{"version":3,"sources":["components/Contacts/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Contacts/ContactList/ContactList.module.css","redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-reducer.js","redux/store.js","redux/selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contact/Contact.js","components/Contacts/ContactList/ContactList.js","components/App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","addContact","createAsyncThunk","contact","a","post","data","deleteContact","contactId","delete","id","fetchContacts","get","items","createReducer","fulfilled","_","payload","state","filter","loading","pending","rejected","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","Form","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","event","target","value","reset","className","s","form","onSubmit","preventDefault","some","alert","label","input","type","pattern","title","required","onChange","btn","Filter","Contact","onDeleteContact","item","onClick","ContactList","useEffect","list","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.310781dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1GqHL\",\"name\":\"Contact_name__1lD2v\",\"btn\":\"Contact_btn__3blgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__6Un6c\"};","// import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\nexport const addContact = createAction(\"contacts/addContact\");\nexport const deleteContact = createAction(\"contacts/delete\");\nexport const fetchContacts = createAction(\"contacts/fetchContacts\");\n\n// const addContact = createAction(\"contacts/add\", (name, number) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\n// eslint-disable-next-line\n// export default { addContact, deleteContact, changeFilter };\n\n// export const addContactRequest = createAction(\"contacts/addContactRequest\");\n// export const addContactSuccess = createAction(\"contacts/addContactSuccess\");\n// export const addContactError = createAction(\"contacts/addContactError\");\n\n// export const deleteContactRequest = createAction(\"contacts/delContactRequest\");\n// export const deleteContactSuccess = createAction(\"contacts/delContactSuccess\");\n// export const deleteContactError = createAction(\"contacts/delContactError\");\n\n// export const fetchContactsRequest = createAction(\n//   \"contacts/fetchContactsRequest\"\n// );\n// export const fetchContactsSuccess = createAction(\n//   \"contacts/fetchContactsSuccess\"\n// );\n// export const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n// import {\n//   addContactError,\n//   addContactRequest,\n//   addContactSuccess,\n//   deleteContactError,\n//   deleteContactRequest,\n//   deleteContactSuccess,\n//   fetchContactsError,\n//   fetchContactsRequest,\n//   fetchContactsSuccess,\n// } from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"https://61967520af46280017e7e0e4.mockapi.io/api/\";\n\n// ////////// с использованием createAsyncThunk ////////////\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact) => {\n    const { data } = await axios.post(\"/contacts\", contact);\n    return data;\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (contactId) => {\n    const {\n      data: { id },\n    } = await axios.delete(`./contacts/${contactId}`);\n    return id;\n  }\n);\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => {\n    const { data } = await axios.get(\"/contacts\");\n    return data;\n  }\n);\n\n////////// без createAsyncThunk /////////////\n\n// export const addContact = (name, number) => async (dispatch) => {\n//   const contact = { name, number };\n//   dispatch(addContactRequest());\n//   try {\n//     const { data } = await axios.post(\"/contacts\", contact);\n//     dispatch(addContactSuccess(data));\n//   } catch (error) {\n//     dispatch(addContactError(error));\n//   }\n//   // синхронный вариант\n//   //   axios\n//   //     .post(\"/contacts\", contact)\n//   //     .then(({ data }) => dispatch(addContactSuccess(data)))\n//   //     .catch((error) => dispatch(addContactError(error)));\n// };\n\n// export const deleteContact = (contactId) => async (dispatch) => {\n//   dispatch(deleteContactRequest());\n//   try {\n//     const contacts = await axios.delete(`./contacts/${contactId}`);\n//     dispatch(deleteContactSuccess(contacts));\n//   } catch (error) {\n//     dispatch(deleteContactError(error));\n//   }\n//   // синхронный вариант\n//   //   axios\n//   //     .delete(`./contacts/${contactId}`)\n//   //     .then(() => dispatch(deleteContactSuccess(contactId)))\n//   //     .catch((error) => dispatch(deleteContactError(error)));\n// };\n\n// export const fetchContacts = () => async (dispatch) => {\n//   dispatch(fetchContactsRequest());\n//   try {\n//     const { data } = await axios.get(`./contacts`);\n//     dispatch(fetchContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactsError(error));\n//   }\n//   // синхронный вариант\n//   //   axios\n//   //     .get(`./contacts`)\n//   //     .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n//   //     .catch((error) => dispatch(fetchContactsError(error)));\n// };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./contacts-actions\";\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from \"./contacts-operations\";\n\n// import {\n//   addContactError,\n//   addContactRequest,\n//   addContactSuccess,\n//   deleteContactError,\n//   deleteContactRequest,\n//   deleteContactSuccess,\n//   fetchContactsError,\n//   fetchContactsRequest,\n//   fetchContactsSuccess,\n// } from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\n// const items = createReducer([], {\n//   [fetchContactsSuccess]: (_, { payload }) => payload,\n//   [addContactSuccess]: (state, { payload }) => [...state, payload],\n//   [deleteContactSuccess]: (state, { payload }) =>\n//     state.filter(({ id }) => id !== payload),\n// });\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\n// const loading = createReducer(false, {\n//   [addContactRequest]: () => true,\n//   [addContactSuccess]: () => false,\n//   [addContactError]: () => false,\n//   [deleteContactRequest]: () => true,\n//   [deleteContactSuccess]: () => false,\n//   [deleteContactError]: () => false,\n//   [fetchContactsRequest]: () => true,\n//   [fetchContactsSuccess]: () => false,\n//   [fetchContactsError]: () => false,\n// });\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts-reducer\";\n// import logger from \"redux-logger\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nexport const store = configureStore({\n  reducer: { contacts: contactsReducer },\n  // official fix of non-serializable data ===\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }), // ===================================\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\n// export default { store };\n\n// export default { store, persistor };\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts-operations\";\nimport s from \"./Form.module.css\";\nimport { getContacts } from \"../../redux/selectors\";\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const isNotUniqueContact = contacts.some(\n      (contact) => contact.name === name\n    );\n    if (isNotUniqueContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name{\"\"}\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number{\"\"}\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts-actions\";\nimport s from \"./Filter.module.css\";\nimport { getFilter } from \"../../redux/selectors\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={s.input}\n        value={filter}\n        onChange={(event) => dispatch(changeFilter(event.target.value))}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./Contact.module.css\";\n\nfunction Contact({ name, number, id, onDeleteContact }) {\n  return (\n    <li className={s.item}>\n      <p className={s.name}>{name}</p>\n      <p className={s.name}>{number}</p>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Contact;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  deleteContact,\n  fetchContacts,\n} from \"../../../redux/contacts-operations\";\nimport Contact from \"../Contact/Contact\";\nimport s from \"./ContactList.module.css\";\nimport { getVisibleContacts } from \"../../../redux/selectors\";\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <Contact\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={(id) => dispatch(deleteContact(id))}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","// import React, { Component } from \"react\";\nimport Form from \"./Form/Form\";\nimport Filter from \"./Filter/Filter\";\nimport ContactList from \"./Contacts/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h2 className=\"title\">Phonebook</h2>\n      <Form />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store.store}> */}\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"btn\":\"Form_btn__aasqa\"};"],"sourceRoot":""}