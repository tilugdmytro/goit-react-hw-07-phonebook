{"version":3,"sources":["components/Filter/Filter.module.css","components/Contacts/ContactList/ContactList.module.css","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","redux/selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contact/Contact.js","components/Contacts/ContactList/ContactList.js","components/App.js","index.js","components/Form/Form.module.css","components/Contacts/Contact/Contact.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","Form","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","event","target","value","reset","className","s","form","onSubmit","preventDefault","some","alert","contactActions","label","input","type","pattern","title","required","onChange","btn","Filter","Contact","onDeleteContact","item","onClick","ContactList","list","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d4893eb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__6Un6c\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"contacts/delete\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\n// eslint-disable-next-line\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts-reducer\";\n// import logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\n  // official fix of non-serializable data ===\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }), // ===================================\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactActions from \"../../redux/contacts-actions\";\nimport s from \"./Form.module.css\";\nimport { getContacts } from \"../../redux/selectors\";\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const isNotUniqueContact = contacts.some(\n      (contact) => contact.name === name\n    );\n    if (isNotUniqueContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(contactActions.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name{\"\"}\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number{\"\"}\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport contactActions from \"../../redux/contacts-actions\";\nimport s from \"./Filter.module.css\";\nimport { getFilter } from \"../../redux/selectors\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={s.input}\n        value={filter}\n        onChange={(event) =>\n          dispatch(contactActions.changeFilter(event.target.value))\n        }\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./Contact.module.css\";\n\nfunction Contact({ name, number, id, onDeleteContact }) {\n  return (\n    <li className={s.item}>\n      <p className={s.name}>{name}</p>\n      <p className={s.name}>{number}</p>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Contact;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport contactActions from \"../../../redux/contacts-actions\";\nimport Contact from \"../Contact/Contact\";\nimport s from \"./ContactList.module.css\";\nimport { getVisibleContacts } from \"../../../redux/selectors\";\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <Contact\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={(id) => dispatch(contactActions.deleteContact(id))}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","// import React, { Component } from \"react\";\nimport Form from \"./Form/Form\";\nimport Filter from \"./Filter/Filter\";\nimport ContactList from \"./Contacts/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h2 className=\"title\">Phonebook</h2>\n      <Form />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"btn\":\"Form_btn__aasqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1GqHL\",\"name\":\"Contact_name__1lD2v\",\"btn\":\"Contact_btn__3blgY\"};"],"sourceRoot":""}